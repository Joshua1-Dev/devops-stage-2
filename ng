events {
    worker_connections 1024;
 }

http {
    # Define upstream servers
    upstream frontend {
        server frontend:3000;
    }

    upstream backend {
        server backend:8000;
    }

    upstream adminer {
        server adminer:8080;
    }

#    upstream proxy_manager {
#        server proxy:8090;
#   }

    # Common proxy settings
    include /etc/nginx/proxy_params.conf;

    server {
        listen 80;
        server_name localhost;
        
        location / {
            proxy_pass http://frontend;
        }

        location /api/ {
            proxy_pass http://backend/api;
        }

        location /api/v1/ {
            proxy_pass http://backend/api/v1/;
        }

        location /docs/ {
            proxy_pass http://backend/docs;
        }

        location /redoc/ {
            proxy_pass http://backend/redoc;
        }
    }

    server {
        listen 80;
        server_name db.localhost;

        location / {
            proxy_pass http://adminer;
        }
    }

    server {
            listen 80;
            server_name proxy.localhost;
    
            location / {
                proxy_pass http://proxy_manager;
            }
        }
    
    


    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name josh.tech.mooo.com;
        include snippets/self-signed.conf;
        include snippets/ssl-params.conf;

        
        if ($host = www.josh.tech.mooo.com) {
                return 301 https://josh.tech.mooo.com$request_uri;
            }


        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://backend/api;
	    proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/ {
            proxy_pass http://backend/api/v1/;
	    proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /docs/ {
            proxy_pass http://backend/docs;
	    proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /redoc/ {
            proxy_pass http://backend/redoc;
	    proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name josh.tech.mooo.com www.josh.tech.mooo.com;
        # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
        return 301 https://josh.tech.mooo.com$request_uri;
    }

    server {
        listen 80;
        server_name db.josh.tech.mooo.com;

        

        location / {
            proxy_pass http://adminer;
	        proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 80;
        server_name proxy.josh.tech.mooo.com;

        location / {
            proxy_pass http://proxy_manager;
	        proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

}
